<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lhyf.config.server.mapper.TItemMapper" >
  <resultMap id="BaseResultMap" type="org.lhyf.config.server.pojo.TItem" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="namespace_id" property="namespaceId" jdbcType="INTEGER" />
    <result column="property" property="property" jdbcType="VARCHAR" />
    <result column="value" property="value" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, namespace_id, property, value, intro, create_time, create_by, update_time, update_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.lhyf.config.server.pojo.TItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.lhyf.config.server.pojo.TItemExample" >
    delete from t_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.lhyf.config.server.pojo.TItem" >
    insert into t_item (id, namespace_id, property, 
      value, intro, create_time, 
      create_by, update_time, update_by
      )
    values (#{id,jdbcType=INTEGER}, #{namespaceId,jdbcType=INTEGER}, #{property,jdbcType=VARCHAR}, 
      #{value,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.lhyf.config.server.pojo.TItem" >
    insert into t_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="namespaceId != null" >
        namespace_id,
      </if>
      <if test="property != null" >
        property,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="namespaceId != null" >
        #{namespaceId,jdbcType=INTEGER},
      </if>
      <if test="property != null" >
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.lhyf.config.server.pojo.TItemExample" resultType="java.lang.Integer" >
    select count(*) from t_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_item
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.namespaceId != null" >
        namespace_id = #{record.namespaceId,jdbcType=INTEGER},
      </if>
      <if test="record.property != null" >
        property = #{record.property,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.intro != null" >
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_item
    set id = #{record.id,jdbcType=INTEGER},
      namespace_id = #{record.namespaceId,jdbcType=INTEGER},
      property = #{record.property,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR},
      intro = #{record.intro,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.lhyf.config.server.pojo.TItem" >
    update t_item
    <set >
      <if test="namespaceId != null" >
        namespace_id = #{namespaceId,jdbcType=INTEGER},
      </if>
      <if test="property != null" >
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.lhyf.config.server.pojo.TItem" >
    update t_item
    set namespace_id = #{namespaceId,jdbcType=INTEGER},
      property = #{property,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      intro = #{intro,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--List<ItemVo> selectItemVOByNameSpaceId(Integer namespaceId);-->
  <select id="selectItemVOByNameSpaceId" resultType="org.lhyf.config.server.model.Vo.ItemVo">
    SELECT id,property,value,intro,update_time,update_by from t_item where namespace_id = #{namespaceId}
  </select>

  <!--List<TItem> selectItemByAppCodeAndEnvNameAndNScode(@Param("appcode") String appcode, @Param("envname") String envname,@Param("nscode") String nscode);-->
  <select id="selectItemByAppCodeAndEnvNameAndNScode" resultType="org.lhyf.config.server.pojo.TItem">
    select i.property,i.value
    from t_app app,t_env env,t_namespace ns,t_item i
    where app.app_code = env.app_code
    and env.id = ns.env_id
    and i.namespace_id = ns.id
    and app.app_code = #{appcode}
    and env.name = #{envname}
    and ns.space_code= #{nscode}
  </select>

  <!--List<TItem> selectItemByAppCodeAndEnvName(@Param("appcode") String appcode, @Param("envname") String envname);-->
  <select id="selectItemByAppCodeAndEnvName" resultType="org.lhyf.config.server.pojo.TItem">
    select i.property,i.value
    from t_app app,t_env env,t_namespace ns,t_item i
    where app.app_code = env.app_code
    and env.id = ns.env_id
    and i.namespace_id = ns.id
    and app.app_code = #{appcode}
    and env.name = #{envname}
  </select>

  <!--List<TItem> selectItemByEnvIdAndProperty(@Param("envId") Integer envId,@Param("property") String property);-->
  <select id="selectItemByEnvIdAndProperty" resultType="org.lhyf.config.server.pojo.TItem">
    select
    i.id, i.namespace_id, i.property, i.value, i.intro, i.create_time, i.create_by, i.update_time, i.update_by
    from t_env env,t_namespace ns,t_item i
    where env.id = ns.env_id
    and i.namespace_id = ns.id
    and env.id = #{envId}
    and i.property= #{property}
  </select>

  <!--List<TItem> getItemByIds(Integer[] itemId);-->
  <select id="getItemByIds" resultType="org.lhyf.config.server.pojo.TItem">
    select
    <include refid="Base_Column_List"/>
    from t_item
    <foreach collection="array" item="id" separator="," open="where id in(" close=")">
      #{id}
    </foreach>
  </select>

</mapper>